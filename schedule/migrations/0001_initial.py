# Generated by Django 3.1.4 on 2020-12-16 10:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название дня недели')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название кафедры')),
            ],
        ),
        migrations.CreateModel(
            name='LessonKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название типа пары')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название должности')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('second_name', models.CharField(help_text='Максимальная длина 50 символов', max_length=50, verbose_name='Фамилия преподавателя')),
                ('first_name', models.CharField(help_text='Максимальная длина 50 символов', max_length=50, verbose_name='Имя преподавателя')),
                ('middle_name', models.CharField(help_text='Максимальная длина 50 символов', max_length=50, verbose_name='Отчество преподавателя')),
                ('phone_number', models.CharField(blank=True, help_text='Пример: +7708-999-99-99', max_length=15, null=True, validators=[django.core.validators.RegexValidator(regex='\\+7[ -]?7[0-9]{2}[ -]?[0-9]{3}[ -]?[0-9]{2}[ -]?[0-9]{2}')], verbose_name='Номер телефона преподавателя')),
                ('slug', models.SlugField(blank=True, help_text='Устанавливается автоматически ', max_length=200, null=True, unique=True, verbose_name='Удобное представления URL')),
                ('kstu_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на преподавателя на сайте KSTU')),
                ('department', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.department', verbose_name='Кафедра')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.teacherposition', verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'ordering': ['second_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Не более 100 символов', max_length=255, verbose_name='Название предмета')),
                ('official_playlist_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на плейлист на канале КарТУ')),
                ('my_playlist_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на плейлист на моем канале')),
                ('slug', models.SlugField(blank=True, help_text='Устанавливается автоматически ', max_length=200, null=True, unique=True, verbose_name='Удобное представления URL')),
                ('lab_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_set', to='schedule.teacher', verbose_name='Имя преподавателя, ведущего лабораторные')),
                ('lecturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lecture_set', to='schedule.teacher', verbose_name='Имя лектора')),
                ('practic_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='practic_set', to='schedule.teacher', verbose_name='Имя преподавателя, ведущего практику')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(verbose_name='Время начала занятия')),
                ('kind', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.lessonkind', verbose_name='Тип занятия')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.subject', verbose_name='Название предмета')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.teacher', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Пара',
                'verbose_name_plural': 'Пары',
                'ordering': ['time'],
            },
        ),
        migrations.CreateModel(
            name='DaySchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_numerator', models.BooleanField(verbose_name='Является ли числителем')),
                ('day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.day', verbose_name='_День недели')),
                ('lessons', models.ManyToManyField(to='schedule.Lesson')),
            ],
            options={
                'verbose_name': 'День недели',
                'verbose_name_plural': 'Дни недели',
                'ordering': ['day'],
            },
        ),
    ]
